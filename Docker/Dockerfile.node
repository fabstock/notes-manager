


FROM node:20-bookworm-slim
RUN apt-get update 
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq  dist-upgrade
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install sudo  curl inetutils-ping lsof vim rsync  
RUN apt-get clean


USER node
RUN  mkdir -p /home/node/app

#WORKDIR /home/notes
WORKDIR /home/node/app 

COPY --chown=1000:1000  package.json  . 
COPY --chown=1000:1000  package-lock.json  . 
COPY --chown=1000:1000 webpack.config.js .
COPY --chown=1000:1000 Docker/build.webpack.sh .

ENV PATH=$PATH:./node_modules/.bin/

#RUN npm ci --omit dev
RUN npm ci 

#FROM gcr.io/distroless/nodejs
#USER node
#RUN  mkdir -p /home/node/app
#COPY --from=build /home/node/app .

#VOLUME /home/notes/api 
#VOLUME /home/notes/web 

#VOLUME api
#VOLUME web

#ARG DB_NAME 
#ARG DB_USER 
#ARG DB_PASSWORD 
#ARG DB_HOST

#ARG MYSQL_ROOT_PASSWORD_FILE
#ENV MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)

ARG MYSQL_ROOT_PASSWORD
ENV MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD:-root}"
ARG MARIADB_ROOT_PASSWORD
ENV MARIADB_ROOT_PASSWORD="${MARIADB_ROOT_PASSWORD:-root}"


ARG DB_NAME
ENV DB_NAME="${DB_NAME:-DB_NAME}"
ARG DB_USER
ENV DB_USER="${DB_USER:-DB_USER}"
ARG DB_PASSWORD
ENV DB_PASSWORD="${DB_PASSWORD:-DB_PASSWORD}"

ENV DB_HOST="${DB_HOST:-DB_HOST}"

ENV WEB_BASE_URL="${WEB_BASE_URL:-WEB_BASE_URL}"
ENV API_BASE_URL="${API_BASE_URL:-API_BASE_URL}"

ARG WEB_PORT
ENV WEB_PORT="${WEB_PORT:-WEB_PORT}"
ARG PORT
ENV PORT="${PORT:-PORT}"

ENV DOCKERAPP_VERSION="node"
#ENV DOCKERAPP_VERSION=${DOCKERAPP_VERSION}
ENV APP_VERSION="$(npm pkg get version)"
ENV TEST_FAB_ENV="1"



EXPOSE 3000
EXPOSE 3001



LABEL org.opencontainers.image.title="notes-manager"
LABEL org.opencontainers.image.description="This is a sample application."
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.authors="github@stock.eu.org"


#RUN jest


CMD ["sh", "-c" , "tail", "-f", "/dev/null"]



