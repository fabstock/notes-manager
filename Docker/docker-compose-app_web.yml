---
#version: '3.8'
services:

  app_web:
    container_name: app_web
    hostname: app_web
    image: fabstock2/notes_manager:app_web-${DOCKERAPP_VERSION}
    command:  npm --prefix web start
    # command:  npm run-script test --verbose
    build:
      dockerfile: ./Docker/Dockerfile.node
      context: ../
      #args:
        #db_host: ${db_host}
        #db_host: containerdb
        #db_user: ${db_user}
        #db_password: ${db_password}
        # db_password:/run/secrets/db_password
        #db_name: ${db_name}
    #restart: always
    restart: unless-stopped
    #depends_on:
      #database:
      #  condition: service_healthy
      #app_webpack:
      #  condition: service_completed_successfully
      #app_test:
      #  condition: service_completed_successfully
      #app_api:
      #  condition: service_completed_successfully
    #ports:
    #  - "3001:3001"
    #  - ":3001"
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      WEB_BASE_URL: ${WEB_BASE_URL:-http://localhost:3001}
      PORT: ${PORT:-3000}
      WEB_PORT: ${WEB_PORT:-3001}
      DB_HOST: ${DB_HOST:-containerdb}
      DB_USER: ${DB_USER:-user1}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      # DB_PASSWORD:/run/secrets/db_password
      DB_NAME: ${DB_NAME:-default-db}

    volumes:
      - ../api:/home/node/app/api
      - ../web:/home/node/app/web
    #healthcheck:
    #  disable: true
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:3001/"] # Assurez-vous que /health est un endpoint qui renvoie 200 si l'API est prÃªte
      #interval: 30s
      #timeout: 10s
      #retries: 5
      #start_period: 40s




networks:
  nonet:
  #default:
  bridge:
    name: notes-manager
    #driver_opts:
    #  com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
 
#secrets:
#  db_password:
#    file: ../Docker/secrets/db_password.txt
#  db_root_password:
#    file: ../Docker/secrets/db_root_password.txt





